#version 410 core

layout(location = 0) out vec4 fragColor;

uniform vec3 specular_albedo = vec3(0.7);
uniform float specular_power = 200.0;

in VS_OUT
{
	vec3 N;
	vec3 L;
	vec3 V;
	vec2 texcoord;
	vec3 normal;
	vec3 view;
} fs_in;

uniform sampler2D tex;
uniform samplerCube tex_cubemap;

void main()
{
		vec3 N = normalize(fs_in.N);
		vec3 L = normalize(fs_in.L);
		vec3 V = normalize(fs_in.V);
		vec3 H = normalize(L + V);
		vec3 R = reflect(normalize(fs_in.view), normalize(fs_in.normal));
		vec3 diffuse = max(dot(N, L), 0.0) * texture(tex,fs_in.texcoord).rgb;
		vec3 specular = pow(max(dot(N, H), 0.0), specular_power) * specular_albedo;
		
		vec4 env = texture(tex_cubemap, R);
		vec4 bp = vec4(diffuse + specular, 1.0f);
		fragColor = bp*0.85 + env*0.15;
}