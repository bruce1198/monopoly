#version 410

layout(location = 0) out vec4 fragColor;

uniform vec3 specular_albedo = vec3(0.7);
uniform float specular_power = 200.0;

in VS_OUT
{
	vec3 N;
	vec3 L;
	vec3 V;
} fs_in;

uniform int flag;
void main()
{
	vec3 N = normalize(fs_in.N);
	vec3 L = normalize(fs_in.L);
	vec3 V = normalize(fs_in.V);
	vec3 H = normalize(L + V);

	if(flag==0) {
		vec3 diffuse = max(dot(N, L), 0.0) * vec3(0.35f, 0.1f, 1.0f);
		vec3 specular = pow(max(dot(N, H), 0.0), specular_power) * specular_albedo;

		fragColor = vec4(diffuse + specular, 1.0);
	}
	else {
		vec3 diffuse = max(dot(N, L), 0.0) * vec3(1.0f, 0.1f, 0.35f);
		vec3 specular = pow(max(dot(N, H), 0.0), specular_power) * specular_albedo;

		fragColor = vec4(diffuse + specular, 1.0);
	}
}